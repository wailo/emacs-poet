[[https://travis-ci.com/wailo/emacs-poet][https://travis-ci.com/wailo/emacs-poet.svg?branch=master]]

* po.et API client
:PROPERTIES:
:TOC:      ignore
:END:

This is an Emacs client for [[https://www.po.et][po.et]]. A decentralized protocol for content ownership, discovery and monetization in media.
The client allows a user to:
 1. Create and publish work to po.et from Emacs.
 2. List and view published works.

** Screenshots

Register a claim
[[file:poet-create-claim.gif]]

Retrieve and view claims
[[file:poet-retrieve-works.gif]]

* Installation
:PROPERTIES:
:TOC:      0
:END:

** MELPA

   @@html:<kbd>@@M-x@@html:</kbd>@@ ~package-install~ ~poet-client~.

** Manual

  Install these required packages:

  + request
  + widget

  Then place poet-client.el in your load-path, and add this line in .emacs init file:

  #+BEGIN_SRC elisp
  (require 'poet-client)
  #+END_SRC

* Configuration
:PROPERTIES:
:TOC:      0
:END:

This is the only required step. Get an API token by following instructions at https://docs.poetnetwork.net/use-poet/create-your-first-claim.html

* Usage
:PROPERTIES:
:TOC:      0
:END:

*** Register a claim:
 1. Activate the buffer that contains the content for publishing.
 2. In Emacs: @@html:<kbd>@@M-x@@html:</kbd>@@ ~poet-client-register-claim~.
 3. A Form will be displayed and the staged content will be displayed in the bottom half.
 4. Fill the form.
 5. Click on Create claim to publish your work.

***  Retrieve a claim:
 1. @@html:<kbd>@@M-x@@html:</kbd>@@ ~poet-client-retrieve-works~
 2. All published works will be displayed in an interactive list.
 3. Move to an item in the list and press @@html:<kbd>@@Return@@html:</kbd>@@ to view the content.
 

** Tips

+ It is possible make a claim on marked region in buffer. Just mark the region before creating a claim.
+ For convenience, API token and the author name can be stored in Emacs init file, then they will be autofilled in the form. This can be done via the Emacs customization menu or in the claim form which has a remember option next to the fields.

* Development

I do welcome bug reports, feature requests, suggestions and pull requests.
